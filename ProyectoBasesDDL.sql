
CREATE DATABASE [PROYECTO_BASES]
USE [PROYECTO_BASES]
GO

--ESQUEMAS

CREATE SCHEMA SERVICIO
CREATE SCHEMA CLIENTE
CREATE SCHEMA FALLA
CREATE SCHEMA CATALOGO
CREATE SCHEMA SCOOTER

--TABLAS

--TABLA USUARIO

CREATE TABLE CLIENTE.USUARIO(
    ID_USUARIO          INT             NOT NULL,
    NOMBRE              VARCHAR(70)     NOT NULL,
    APELLIDO_1          VARCHAR(70)     NOT NULL,
    APELLIDO_2          VARCHAR(70)     NULL,
    CORREO              VARCHAR(80)     NOT NULL,
    CONTRASEÑA          VARCHAR(30)     NOT NULL,
    PUNTOS              SMALLINT        NOT NULL,
    FECHA_NACIMIENTO    DATE            NULL,
    CONSTRAINT pk_usuario PRIMARY KEY (ID_USUARIO),
	CONSTRAINT uq_correo UNIQUE (CORREO),
	CONSTRAINT uq_contraseña UNIQUE (CONTRASEÑA)
);

--TABLA TARJETA

CREATE TABLE CLIENTE.TARJETA(
    ID_TARJETA               INT           NOT NULL,
    NUMERO                   CHAR(16)      NOT NULL,
    BANCO                    VARCHAR(40)   NOT NULL,
    AÑO_EXPIRACION           CHAR(2)       NOT NULL,
    MES_EXPIRACION           CHAR(2)       NOT NULL,
    TIPO_TARJETA             CHAR(1)       NOT NULL,
    ID_USUARIO               INT           NOT NULL,
    CONSTRAINT pk_tarjeta PRIMARY KEY (ID_TARJETA),
	CONSTRAINT fk_id_usuario FOREIGN KEY (ID_USUARIO) REFERENCES CLIENTE.USUARIO (ID_USUARIO),
	CONSTRAINT ck_tipo_tarjeta CHECK (TIPO_TARJETA in ('V','M')),
	CONSTRAINT ck_numero CHECK (len(NUMERO) = 16),
	CONSTRAINT ck_mes_expiracion CHECK (MES_EXPIRACION BETWEEN '01' AND '12'),
	CONSTRAINT ck_anio_expiracion CHECK (AÑO_EXPIRACION BETWEEN '00' AND '99')
);

--TABLA CARGO

CREATE TABLE SERVICIO.CARGO(
    FOLIO                     SMALLINT          NOT NULL,
    ID_TARJETA                INT               NOT NULL,
    FECHA                     DATE              NOT NULL,
    IMPORTE                   MONEY             NOT NULL,
    NUMERO_OPERACION          CHAR(9)           NOT NULL,
    SERVICIO                  VARCHAR(40)       NOT NULL,
    CONSTRAINT pk_cargo PRIMARY KEY (FOLIO, ID_TARJETA),
	CONSTRAINT fk_id_tarjeta FOREIGN KEY (ID_TARJETA) REFERENCES CLIENTE.TARJETA (ID_TARJETA),
	CONSTRAINT ck_numero_operacion CHECK (len(NUMERO_OPERACION) = 9),
	CONSTRAINT uq_numero_operacion unique (NUMERO_OPERACION)
);

--TABLA TARJETA_PREPAGO

CREATE TABLE TARJETA_PREPAGO(
    CODIGO              NUMERIC(18,0)   NOT NULL,
    FECHA_REGISTRO      DATE            NOT NULL,
    FECHA_EXPIRACION    DATE            NOT NULL,
    CREDITO             MONEY           NOT NULL,
    ACTIVA              BIT             NOT NULL,
    ID_USUARIO          INT             NOT NULL,
    CONSTRAINT pk_tarejeta_prepago PRIMARY KEY (CODIGO),
	CONSTRAINT fk_id_usuario_prepago FOREIGN KEY (ID_USUARIO) REFERENCES CLIENTE.USUARIO (ID_USUARIO),
	CONSTRAINT ck_codigo CHECK (len(codigo) = 18),
	CONSTRAINT ck_activa CHECK (ACTIVA IN (0,1)),
);

--TABLA REPORTE_FALLA

CREATE TABLE FALLA.REPORTE_FALLA(
    ID_REPORTE     INT              NOT NULL,
    DESCRIPCION    VARCHAR(140)     NOT NULL,
    FECHA          DATE             NOT NULL,
    LATITUD        DECIMAL(8, 6)    NULL, 
    LONGITUD       DECIMAL(9, 6)    NULL,
    ID_USUARIO     INT              NOT NULL,
    CONSTRAINT pk_reporte_falla PRIMARY KEY (ID_REPORTE),
	CONSTRAINT fk_id_usuario_reporte_falla FOREIGN KEY (ID_USUARIO) REFERENCES CLIENTE.USUARIO (ID_USUARIO)
);

--TABLA IMAGEN_FALLA

CREATE TABLE FALLA.IMAGEN_FALLA(
    ID_IMAGEN     INT       NOT NULL,
    IMAGEN        IMAGE     NOT NULL,
    ID_REPORTE    INT       NOT NULL,
    CONSTRAINT pk_id_imagen PRIMARY KEY (ID_IMAGEN),
	CONSTRAINT fk_id_reporte_imagen FOREIGN KEY (ID_REPORTE) REFERENCES FALLA.REPORTE_FALLA (ID_REPORTE)
);

--TABLA ESTACION

CREATE TABLE CATALOGO.ESTACION(
    ID_ESTACION         SMALLINT      NOT NULL,
    TIPO_CARGA          BIT           NOT NULL,
    UBICACION           VARCHAR(40)   NULL,
    CONSTRAINT pk_estacion PRIMARY KEY (ID_ESTACION),
	CONSTRAINT ck_tipo_cargo CHECK (TIPO_CARGA in (1,0))
);


--TABLA ESTACION

CREATE TABLE CATALOGO.EMPLEADO(
    CLAVE_EMPLEADO    SMALLINT        NOT NULL,
    NOMBRE            VARCHAR(70)     NOT NULL,
    APELLIDO_1        VARCHAR(70)     NOT NULL,
    APELLIDO_2        VARCHAR(70)     NULL,
    TELEFONO          CHAR(10)        NOT NULL,
    ID_ESTACION       SMALLINT        NOT NULL,
    CONSTRAINT pk_empleado PRIMARY KEY (CLAVE_EMPLEADO),
	CONSTRAINT uq_telefono UNIQUE (TELEFONO),
	CONSTRAINT uq_id_estacion UNIQUE (ID_ESTACION)
);


--TABLA SERVICIO

CREATE TABLE SERVICIO.SERVICIO(
    ID_NUMERO_SERVICIO          INT              NOT NULL,
	NUMERO_DE_SERVICIO          INT              NOT NULL,
    COSTO_TOTAL                 MONEY            NULL, 
    TIPO_SERVICIO               CHAR(1)          NOT NULL,
    FECHA_INICIO                DATE             NOT NULL,
    HORA_INICIO                 DATETIME         NOT NULL,
    FECHA_FIN                   DATE             NOT NULL,
    HORA_FIN                    DATETIME         NOT NULL,
    CONSTRAINT pk_servicio PRIMARY KEY (ID_NUMERO_SERVICIO),
	CONSTRAINT uq_numero_servicio unique (NUMERO_DE_SERVICIO),
	CONSTRAINT ck_numero_de_servicio CHECK (len(NUMERO_DE_SERVICIO) = 10),
	CONSTRAINT ck_tipo_servicio CHECK (tipo_servicio in ('V','R','C')),
);


--TABLA VIAJE

CREATE TABLE SERVICIO.VIAJE (
    ID_NUMERO_SERVICIO           INT        NOT NULL,
    COSTO_POR_HORA               MONEY      NOT NULL,
	TIEMPO_TOTAL				 CHAR(5)    NOT NULL,
	CONSTRAINT pk_viaje PRIMARY KEY (ID_NUMERO_SERVICIO),
	CONSTRAINT fk_id_numero_servicio FOREIGN KEY (ID_NUMERO_SERVICIO) REFERENCES SERVICIO.SERVICIO (ID_NUMERO_SERVICIO)
);



--TABLA RENTA

CREATE TABLE SERVICIO.RENTA(
    ID_NUMERO_SERVICIO          INT              NOT NULL,
    CALLE                       VARCHAR(40)      NOT NULL,
    NUMERO_EXTERIOR             SMALLINT         NOT NULL,
    NUMERO_INTERIOR             SMALLINT		 NULL,
    COLONIA                     VARCHAR(40)      NOT NULL,
    CODIGO_POSTAL               CHAR(5)          NOT NULL,
    REFERENCIA                  VARCHAR(100)     NOT NULL,
    COSTO_POR_DIA               MONEY            NOT NULL,
    NUMERO_DE_DIAS              SMALLINT         NOT NULL,
    CONSTRAINT pk_renta PRIMARY KEY (ID_NUMERO_SERVICIO),
	CONSTRAINT fk_id_numero_servicio_renta FOREIGN KEY (ID_NUMERO_SERVICIO) REFERENCES SERVICIO.SERVICIO (ID_NUMERO_SERVICIO),
	CONSTRAINT ck_codigo_postal CHECK (len(CODIGO_POSTAL) = 5),
	CONSTRAINT ck_numero_dias CHECK (NUMERO_DE_DIAS <= 15)
);

--TABLA CARGO_SERVICIO

CREATE TABLE SERVICIO.CARGO_SERVICIO(
    ID_NUMERO_SERVICIO          INT             NOT NULL,
    TARIFA                      MONEY           NOT NULL,
    CLAVE_EMPLEADO              SMALLINT        NOT NULL,
	CONSTRAINT fk_cargo_servicio FOREIGN KEY (ID_NUMERO_SERVICIO) REFERENCES SERVICIO.SERVICIO (ID_NUMERO_SERVICIO),
    CONSTRAINT pk_cargo_servicio PRIMARY KEY (ID_NUMERO_SERVICIO),
	CONSTRAINT fk_clave_empleado FOREIGN KEY (CLAVE_EMPLEADO) REFERENCES CATALOGO.EMPLEADO (CLAVE_EMPLEADO)
);

--TABLA MARCA 

CREATE TABLE CATALOGO.MARCA(
    ID_MARCA    TINYINT        NOT NULL,
    NOMBRE      VARCHAR(40)    NOT NULL,
    CORREO      VARCHAR(60)    NOT NULL,
    CONSTRAINT pk_marca PRIMARY KEY (ID_MARCA),
	CONSTRAINT uq_correo UNIQUE (CORREO)
);

--TABLA TELEFONO_MARCA

CREATE TABLE CATALOGO.TELEFONO_MARCA(
    ID_TELEFONO     TINYINT    NOT NULL,
    TELEFONO        CHAR(10)   NOT NULL,
    ID_MARCA        TINYINT    NOT NULL,
    CONSTRAINT pk_telefono_marca PRIMARY KEY (ID_TELEFONO),
	CONSTRAINT uq_telefono_marca UNIQUE (TELEFONO),
	CONSTRAINT fk_id_marca FOREIGN KEY (ID_MARCA) REFERENCES CATALOGO.MARCA (ID_MARCA)
);

--TABLA ESTATUS 

CREATE TABLE CATALOGO.ESTATUS(
    CLAVE_ESTATUS     TINYINT        NOT NULL,
    DESCRIPCION       VARCHAR(20)    NOT NULL,
    CONSTRAINT pk_estatus PRIMARY KEY (CLAVE_ESTATUS),
	CONSTRAINT ck_descripcion CHECK (DESCRIPCION in ('EN ESTACION', 'EN VIAJE', 'BATERIA BAJA', 'CON FALLAS', 'EN RENTA', 'CARGA DE BATERIA', 'ALERTA'))
);

--TABLA SCOOTER

CREATE TABLE SCOOTER.SCOOTER(
    NUMERO_SERIE                    INT              NOT NULL,
    NUMERO_SERIE_REEMPLAZO          INT              NULL,
    MATRICULA                       CHAR(5)          NOT NULL,
    CODIGO_CONSOLA                  TINYINT          NOT NULL,
    PORCENTAJE_CARGA                TINYINT          NOT NULL,
    COSTO_COMPRA                    MONEY            NOT NULL,
    FECHA_COMPRA                    DATE             NOT NULL,
    FECHA_HORA_ESTATUS              DATETIME         NOT NULL,
    ID_MARCA                        TINYINT          NOT NULL,
    CLAVE_ESTATUS                   TINYINT          NOT NULL,
    ID_ESTACION                     SMALLINT         NOT NULL,
    CONSTRAINT pk_scooter PRIMARY KEY (NUMERO_SERIE),
	CONSTRAINT fk_reemplazo FOREIGN KEY (NUMERO_SERIE_REEMPLAZO) REFERENCES SCOOTER.SCOOTER (NUMERO_SERIE),
	CONSTRAINT fk_marca_scooter FOREIGN KEY (ID_MARCA) REFERENCES CATALOGO.MARCA (ID_MARCA),
	CONSTRAINT fk_estatus_scooter FOREIGN KEY (CLAVE_ESTATUS) REFERENCES CATALOGO.ESTATUS (CLAVE_ESTATUS),
	CONSTRAINT fk_estacion_scooter FOREIGN KEY (ID_ESTACION) REFERENCES CATALOGO.ESTACION (ID_ESTACION),
	CONSTRAINT ck_numero_serie CHECK (len(NUMERO_SERIE) = 9),
	CONSTRAINT ck_reemplazo CHECK (len(NUMERO_SERIE_REEMPLAZO) = 9),
	CONSTRAINT ck_matricula CHECK (len(MATRICULA) = 5),
	CONSTRAINT ck_codigo_consola CHECK (len(CODIGO_CONSOLA) = 8),
	CONSTRAINT uq_matricula UNIQUE (MATRICULA),
	CONSTRAINT uq_codigo_consola UNIQUE (CODIGO_CONSOLA)
);

--TABLA HISTORICO ESTATUS

CREATE TABLE SCOOTER.HISTORICO_ESTATUS(
    NUMERO_SERIE          INT         NOT NULL,
    CLAVE_ESTATUS         TINYINT     NOT NULL,
    FECHA_HORA_ESTATUS    DATETIME    NOT NULL,
    CONSTRAINT fk_numero_serie_historico FOREIGN KEY (NUMERO_SERIE) REFERENCES SCOOTER.SCOOTER (NUMERO_SERIE),
	CONSTRAINT fk_clave_estatus_historico FOREIGN KEY (CLAVE_ESTATUS) REFERENCES CATALOGO.ESTATUS (CLAVE_ESTATUS),
	CONSTRAINT pk_historico_estatus PRIMARY KEY (NUMERO_SERIE,CLAVE_ESTATUS)
);

--TABLA USUARIO SCOOTER

CREATE TABLE SERVICIO.USUARIO_SCOOTER(
    ID_USUARIO          INT     NOT NULL,
    NUMERO_SERIE        INT     NOT NULL,
    ID_NUMERO_SERVICIO  INT     NOT NULL,
    CONSTRAINT fk_id_usuario_scooter FOREIGN KEY (ID_USUARIO) REFERENCES CLIENTE.USUARIO (ID_USUARIO),
	CONSTRAINT fk_numero_serie_scooter FOREIGN KEY (NUMERO_SERIE) REFERENCES SCOOTER.SCOOTER (NUMERO_SERIE),
	CONSTRAINT fk_id_numero_servicio_scooter FOREIGN KEY (ID_NUMERO_SERVICIO) REFERENCES SERVICIO.SERVICIO (ID_NUMERO_SERVICIO),
	CONSTRAINT pk_usuario_scooter PRIMARY KEY (ID_USUARIO,NUMERO_SERIE)
);

--TABLA REGISTRO UBICACION

CREATE TABLE REGISTRO_UBICACION(
    ID_REGISTRO           INT              NOT NULL,
    LATITUD               DECIMAL(8, 6)    NOT NULL,
    LONGITUD              DECIMAL(9, 6)    NOT NULL,
    FECHA                 DATE             NOT NULL,
    HORA                  DATETIME         NOT NULL,
    NUMERO_SERIE          INT              NOT NULL,
    CONSTRAINT pk_registro_ubicacion PRIMARY KEY (ID_REGISTRO),
	CONSTRAINT fk_numero_serie_ubicacion FOREIGN KEY (NUMERO_SERIE) REFERENCES SCOOTER.SCOOTER (NUMERO_SERIE)
);





















